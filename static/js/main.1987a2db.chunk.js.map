{"version":3,"sources":["components/ResultSection/SuccessPage.module.css","components/Header/Header.module.css","components/Pagination/MyPagination.module.css","components/ResultSection/Result.module.css","img/logo.svg","api/api.ts","bll/profileReducer.ts","img/search.svg","components/Header/searchForm.tsx","components/Header/Header.tsx","components/Header/HeaderContainer.tsx","components/ResultSection/UniversalEmptyP.tsx","img/notFound.svg","img/users.svg","img/repListEmpty.svg","components/ResultSection/Repositories.tsx","components/Pagination/Pagination.tsx","components/ResultSection/SuccessPage.tsx","img/loader.svg","components/ResultSection/preloader/Preloader.tsx","components/ResultSection/Result.tsx","components/routes/Routes.tsx","app/App.tsx","reportWebVitals.ts","app/store.ts","index.tsx"],"names":["module","exports","instance","axios","create","baseURL","userAPI","user","get","page","per_page","initialState","repositories","avatar_url","portionSize","isSuccess","startElement","endElement","preLoader","SET_USER","SET_REPOSITORIES","SET_CURRENT_PAGE","SET_SUCCESS","SET_PRELOADER","SET_START","SET_END","actionsUser","type","currentPage","getUserTC","userName","dispatch","then","res","data","catch","er","SearchForm","pageNumbers","useSelector","state","profile","perPageNumber","useDispatch","className","s","searchIcon","src","search","alt","onKeyPress","e","key","preventDefault","currentTarget","value","name","placeholder","Header","header","logo","searchForm","HeaderContainer","headerContainer","UniversalEmptyP","props","image","text","initResult","Repositories","resRepositories","resUser","listRepositories","map","el","repositoriesBlock","target","rel","href","html_url","description","HeaderBlock","public_repos","Pagination","pageCount","getPage","productTotalCount","pages","title","paginationStyle","buttonStyle","selectStyle","paginationState","lastPage","Math","ceil","i","push","selectedPage","paginationElement","onClick","getPages","filter","p","newV","style","marginRight","paginationBlock","marginLeft","display","arrow","disabled","SuccessPage","onPageChanged","gridContainer","Foto","userImg","login","followingBlock","followers","follower","following","repListEmpty","Preloader","preloader","width","Result","resultContainer","result","pageNumber","notFound","PATH","Routes","path","children","exact","component","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","action","store","createStore","applyMiddleware","thunkMiddleware","window","ReactDOM","render","StrictMode","basename","document","getElementById"],"mappings":"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","file":"static/js/main.1987a2db.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"gridContainer\":\"SuccessPage_gridContainer__i210D\",\"Foto\":\"SuccessPage_Foto__1vqx3\",\"userImg\":\"SuccessPage_userImg__292nv\",\"followingBlock\":\"SuccessPage_followingBlock__1FYb-\",\"userName\":\"SuccessPage_userName__1tLbz\",\"Header\":\"SuccessPage_Header__3qG2E\",\"repositories\":\"SuccessPage_repositories__3lidp\",\"repositoriesBlock\":\"SuccessPage_repositoriesBlock__1_3lG\",\"arrow\":\"SuccessPage_arrow__vaTEp\",\"paginationElement\":\"SuccessPage_paginationElement__cfS69\",\"selectedPage\":\"SuccessPage_selectedPage__3He0k\",\"disabledArrow\":\"SuccessPage_disabledArrow__Ki0pk\",\"HeaderBlock\":\"SuccessPage_HeaderBlock__3kL85\",\"paginationBlock\":\"SuccessPage_paginationBlock__3Zp0p\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerContainer\":\"Header_headerContainer__1RAzH\",\"header\":\"Header_header__2QYYm\",\"searchIcon\":\"Header_searchIcon__3SNoR\",\"searchForm\":\"Header_searchForm__2eSLk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Pagination\":\"MyPagination_Pagination__3YBxT\",\"paginationBlock\":\"MyPagination_paginationBlock__2i7ki\",\"paginationElement\":\"MyPagination_paginationElement__2XHQe\",\"selectedPage\":\"MyPagination_selectedPage__1tfl2\",\"arrow\":\"MyPagination_arrow__SKB2H\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"resultContainer\":\"Result_resultContainer__mHDss\",\"result\":\"Result_result__10kQR\",\"initResult\":\"Result_initResult__2ZRse\",\"searchIcon\":\"Result_searchIcon__24ZNr\"};","export default __webpack_public_path__ + \"static/media/logo.e09cf6e4.svg\";","import axios from \"axios\";\r\n\r\n\r\nconst instance = axios.create({\r\n    baseURL: \"https://api.github.com/\"\r\n});\r\n\r\nexport const userAPI = {\r\n    getUser(user: string) {\r\n        return instance.get(`users/${user}`)\r\n    },\r\n    getRepositories(user:string, page:number, per_page:number) {\r\n        return instance.get(`users/${user}/repos?page=${page}&per_page=${per_page}`)\r\n    }\r\n}\r\n// https://api.github.com/users/SashaZaicev/repos\r\n// currentPage: number, pageSize: number\r\n//     ?page=${page}&per_page=${per_page}","import {userAPI} from \"../api/api\";\r\nimport {Dispatch} from \"redux\";\r\n\r\nexport const initialState = {\r\n    user: {},\r\n    repositories: [],\r\n    avatar_url: '',\r\n    per_page: 4,\r\n    page: 1,\r\n    portionSize: 4,\r\n    isSuccess: false,\r\n    startElement: 1,\r\n    endElement: 4,\r\n    preLoader: false\r\n\r\n};\r\n\r\nconst SET_USER = \"SET_USER\"\r\nconst SET_REPOSITORIES = \"SET_REPOSITORIES\"\r\nconst SET_CURRENT_PAGE = \"SET_CURRENT_PAGE\"\r\nconst SET_SUCCESS = \"SET_SUCCESS\"\r\nconst SET_PRELOADER = \"SET_PRELOADER\"\r\nconst SET_START = \"SET_START\"\r\nconst SET_END = \"SET_END\"\r\n\r\nexport const profileReducer = (state = initialState, action: any) => {\r\n    switch (action.type) {\r\n        case  SET_START: {\r\n            return {\r\n                ...state,\r\n                startElement: action.startElement\r\n            }\r\n        }\r\n        case  SET_END: {\r\n            return {\r\n                ...state,\r\n                endElement: action.endElement\r\n            };\r\n        }\r\n        case  SET_USER: {\r\n            return {\r\n                ...state,\r\n                user: action.user\r\n            };\r\n        }\r\n        case  SET_REPOSITORIES: {\r\n            return {\r\n                ...state,\r\n                repositories: action.repositories\r\n            };\r\n        }\r\n        case  SET_CURRENT_PAGE: {\r\n            return {\r\n                ...state,\r\n                page: action.currentPage\r\n            };\r\n        }\r\n        case  SET_SUCCESS: {\r\n            return {\r\n                ...state,\r\n                isSuccess: action.isSuccess\r\n            };\r\n        }\r\n        case  SET_PRELOADER: {\r\n            return {\r\n                ...state,\r\n                preLoader: action.preLoader\r\n            };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const actionsUser = {\r\n    setUser: (user: string) => ({type: SET_USER, user: user}) as const,\r\n    setRepositories: (repositories: string) => ({type: SET_REPOSITORIES, repositories}) as const,\r\n    setCurrentPage: (currentPage: number) => ({type: SET_CURRENT_PAGE, currentPage}) as const,\r\n    setSuccess: (isSuccess: boolean) => ({type: SET_SUCCESS, isSuccess}) as const,\r\n    setPreLoader: (preLoader: boolean) => ({type: SET_PRELOADER, preLoader}) as const,\r\n    setStart: (startElement: number) => ({type: SET_START, startElement}) as const,\r\n    setEnd: (endElement: number) => ({type: SET_END, endElement}) as const,\r\n}\r\n\r\n\r\nexport const getUserTC = (userName: string, page: number, per_page: number) => {\r\n    return (dispatch: Dispatch) => {\r\n        dispatch(actionsUser.setSuccess(true))\r\n        dispatch(actionsUser.setPreLoader(true))\r\n        userAPI.getUser(userName)\r\n            .then(res => {\r\n                dispatch(actionsUser.setUser(res.data))\r\n                userAPI.getRepositories(userName, page, per_page)\r\n                    .then(res => {\r\n                        dispatch(actionsUser.setRepositories(res.data))\r\n                        dispatch(actionsUser.setPreLoader(false))\r\n                    })\r\n            })\r\n            .catch(er => {\r\n                    dispatch(actionsUser.setUser(''))\r\n                    dispatch(actionsUser.setPreLoader(false))\r\n                }\r\n            )\r\n    }\r\n}","export default __webpack_public_path__ + \"static/media/search.a491d0a9.svg\";","import React from 'react';\r\nimport {getUserTC} from \"../../bll/profileReducer\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport search from \"../../img/search.svg\"\r\nimport s from \"./Header.module.css\"\r\nimport {AppRootStateType} from \"../../app/store\";\r\n\r\nconst SearchForm = () => {\r\n    const pageNumbers = useSelector((state: AppRootStateType) => state.profile.page)\r\n    const perPageNumber = useSelector((state: AppRootStateType) => state.profile.per_page)\r\n\r\n    const dispatch = useDispatch();\r\n    const getUser = (e: React.KeyboardEvent<EventTarget & HTMLInputElement>) => {\r\n        if (e.key === 'Enter') {\r\n            e.preventDefault();\r\n            const user = e.currentTarget.value;\r\n            dispatch(getUserTC(user, pageNumbers, perPageNumber));\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <img className={s.searchIcon} src={search} alt=\"\"/>\r\n           <input onKeyPress={getUser} type=\"text\" name=\"username\" placeholder='Enter GitHub username'/>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default SearchForm;","import React from 'react';\r\nimport s from './Header.module.css';\r\nimport logo from '../../img/logo.svg'\r\nimport SearchForm from \"./searchForm\";\r\n\r\nconst Header = () => {\r\n    return (\r\n        <div className={s.header}>\r\n            <div><img src={logo} alt={'logo'}/></div>\r\n            <div className={s.searchForm}><SearchForm/></div>\r\n        </div>)\r\n}\r\nexport default Header;\r\n","import React from 'react';\r\nimport Header from \"./Header\";\r\nimport s from './Header.module.css'\r\n\r\nfunction HeaderContainer() {\r\n    return (\r\n        <div className={s.headerContainer}>\r\n            <Header/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HeaderContainer","import React from 'react';\r\nimport s from \"./Result.module.css\";\r\n\r\ntype UniversalPropsType = {\r\n    image?: string,\r\n    text?: string,\r\n\r\n}\r\n\r\nfunction UniversalEmptyP(props: UniversalPropsType) {\r\n\r\n    let {image, text} = props;\r\n\r\n    return (\r\n        <div className={s.initResult}>\r\n            <img className={s.searchIcon} src={image} alt=\"\"/>\r\n            <span>{text}</span>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default UniversalEmptyP","export default __webpack_public_path__ + \"static/media/notFound.6b254376.svg\";","export default __webpack_public_path__ + \"static/media/users.8f7ad20e.svg\";","export default __webpack_public_path__ + \"static/media/repListEmpty.f5075737.svg\";","import React from 'react';\r\nimport s from \"./SuccessPage.module.css\";\r\n\r\ntype RepositoriesPropsType = {\r\n    resRepositories: Array<any>,\r\n    resUser: any,\r\n}\r\nconst Repositories: React.FC<RepositoriesPropsType> = ({\r\n                                                           resRepositories,\r\n                                                           resUser\r\n                                                       }) => {\r\n    const listRepositories = resRepositories.map((el) => {\r\n        return (\r\n            <div key={el + el.name} className={s.repositoriesBlock}>\r\n                <a target=\"_blank\" rel={'noreferrer'} href={el.html_url}>{el.name}</a>\r\n                <div>{el.description}</div>\r\n            </div>\r\n\r\n        )\r\n    })\r\n    return (\r\n        <div className={s.HeaderBlock}>\r\n            <div className={s.Header}>\r\n                <div>Repositories ({resUser.public_repos})</div>\r\n            </div>\r\n            <div className={s.repositories}>{listRepositories}</div>\r\n\r\n        </div>);\r\n};\r\n\r\nexport default Repositories;","import React, {CSSProperties, ReactNode} from 'react';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../app/store\";\r\nimport s from \"../Pagination/MyPagination.module.css\";\r\nimport {actionsUser} from \"../../bll/profileReducer\";\r\n\r\ninterface IPaginationProps {\r\n    page: number;\r\n    pageCount: number;\r\n    productTotalCount: number;\r\n    getPage: (newPage: number, newPageCount: number) => void;\r\n\r\n    title?: ReactNode;\r\n    paginationStyle?: CSSProperties;\r\n    buttonStyle?: CSSProperties;\r\n    selectStyle?: CSSProperties;\r\n}\r\n\r\nconst Pagination: React.FC<IPaginationProps> = (\r\n    {\r\n        page, pageCount, productTotalCount, getPage,\r\n\r\n        title = 'Pagination ', paginationStyle,\r\n        buttonStyle, selectStyle\r\n    }\r\n) => {\r\n    let pages = [];\r\n    const dispatch = useDispatch();\r\n    const paginationState = useSelector((state: AppRootStateType) => state.profile)\r\n\r\n    let lastPage = Math.ceil(paginationState.user.public_repos\r\n        / paginationState.per_page);\r\n\r\n    const getPages = (i:number, pageCount:number) => {\r\n        getPage(i, pageCount)\r\n\r\n\r\n    }\r\n    for (let i = 1; i <= lastPage; i++) pages.push((\r\n        <button\r\n            key={i}\r\n            className={page === i ? s.selectedPage : s.paginationElement}\r\n            onClick={() => getPages(i, pageCount)}\r\n        >\r\n            {i}\r\n        </button>\r\n    ));\r\n\r\n    if ((page + 3) < lastPage) {\r\n        pages[page + 2] = (\r\n            <span key={page + 3}>\r\n                ...\r\n            </span>\r\n        );\r\n        pages = pages.filter((p, i) => i < (page + 2) || i === (lastPage - 1));\r\n    }\r\n    if (page > 2) {\r\n        pages[1] = (\r\n            <span key={2}>\r\n                ...\r\n            </span>\r\n        );\r\n        pages = pages.filter((p, i) => i < 2 || i > page - 4);\r\n    }\r\n    const prevPage = () => {\r\n        getPage(page - 1, pageCount);\r\n        dispatch(actionsUser.setStart(paginationState.startElement - 4))\r\n        dispatch(actionsUser.setEnd(paginationState.endElement - 4))\r\n\r\n        // if ((currentPage - 1) % pageNumberLimit == 0) {\r\n        //     setMaxPageNumberLimit(maxPageNumberLimit - pageNumberLimit);\r\n        //     setMinPageNumberLimit(minPageNumberLimit - pageNumberLimit);\r\n        // }\r\n    }\r\n    const nextPage = () => {\r\n        getPage(page + 1, pageCount);\r\n        dispatch(actionsUser.setStart(paginationState.startElement + 4))\r\n        dispatch(actionsUser.setEnd(paginationState.endElement + 4))\r\n        // if (currentPage + 1 > maxPageNumberLimit) {\r\n        //     setMaxPageNumberLimit(maxPageNumberLimit + pageNumberLimit);\r\n        //     setMinPageNumberLimit(minPageNumberLimit + pageNumberLimit);\r\n        // }\r\n    }\r\nconst newV =paginationState.endElement\r\n\r\n    return (\r\n        <div className={s.Pagination}>\r\n\r\n            <div style={{\r\n                marginRight: '10px'\r\n            }\r\n            }>{`${paginationState.startElement} - ${newV}  of ${paginationState.user.public_repos} items`}</div>\r\n\r\n            {/*<select value={pageCount} onChange={e => getPage(page, Number(e.currentTarget.value))}*/}\r\n            {/*        style={{*/}\r\n            {/*            ...selectStyle,*/}\r\n            {/*            marginRight: '5px'*/}\r\n            {/*        }}>*/}\r\n            {/*    <option value={4}>4</option>*/}\r\n            {/*    <option value={7}>7</option>*/}\r\n            {/*    <option value={10}>10</option>*/}\r\n            {/*    <option value={20}>20</option>*/}\r\n            {/*    <option value={50}>50</option>*/}\r\n            {/*</select>*/}\r\n            <div className={s.paginationBlock}><div style={{\r\n                marginLeft: '5px',\r\n                marginRight: '5px',\r\n                display: 'flex'\r\n            }}>\r\n                {<button className={s.arrow} disabled={page <= 1} onClick={() => {\r\n                    prevPage()\r\n                }}>\r\n                    {'<'}\r\n                </button>}\r\n            </div>\r\n            {pages}\r\n            <div style={{\r\n                marginLeft: '5px',\r\n                marginRight: '5px',\r\n                display: 'flex'\r\n            }}>\r\n                {<button className={s.arrow} disabled={page >= lastPage} onClick={() => {\r\n                    nextPage()\r\n                }}>{'>'}</button>}\r\n            </div>\r\n        </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Pagination;","import React from 'react';\r\nimport s from './SuccessPage.module.css'\r\nimport followers from \"../../img/users.svg\"\r\nimport follower from \"../../img/notFound.svg\"\r\nimport {useSelector} from \"react-redux\";\r\nimport repListEmpty from \"../../img/repListEmpty.svg\";\r\n\r\nimport {AppRootStateType} from \"../../app/store\";\r\nimport Repositories from \"./Repositories\";\r\nimport UniversalEmptyP from \"./UniversalEmptyP\";\r\nimport Pagination from \"../Pagination/Pagination\";\r\n\r\ntype SuccessPropsType = {\r\n    userName: string,\r\n    resUser: any\r\n    resRepositories: Array<{}>,\r\n    paginationState: {}\r\n    onPageChanged: (pageNumber: number) => void\r\n}\r\n\r\nconst SuccessPage: React.FC<SuccessPropsType> = ({\r\n                                                     userName,\r\n                                                     resUser,\r\n                                                     resRepositories,\r\n                                                     onPageChanged\r\n                                                 }) => {\r\n    const paginationState = useSelector((state: AppRootStateType) => state.profile)\r\n\r\n    const repListEmptyPage = 'Repository list is empty'\r\n\r\n    return (\r\n        <div className={s.gridContainer}>\r\n            <div className={s.Foto}>\r\n                <a href={resUser.html_url}><img className={s.userImg} src={resUser.avatar_url} alt=\"\"/></a>\r\n                <div className={s.userName}><h3>{userName}</h3>\r\n                    <div><a href={resUser.html_url} rel={'noreferrer'} target=\"_blank\">{resUser.login}</a></div>\r\n                </div>\r\n                <div className={s.followingBlock}>\r\n                    <span><img src={followers} alt=\"\"/>{resUser.followers} followers</span>\r\n                    <span><img src={follower} alt=\"\"/>{resUser.following} following</span>\r\n                </div>\r\n            </div>\r\n            {resRepositories\r\n                ?\r\n                <Repositories resRepositories={resRepositories} resUser={resUser}/>\r\n                :\r\n                <UniversalEmptyP\r\n                text={repListEmptyPage}\r\n                image={repListEmpty}\r\n                />}\r\n            <Pagination page={paginationState.page}\r\n                        pageCount={paginationState.per_page}\r\n                        productTotalCount={paginationState.portionSize}\r\n                        getPage={onPageChanged}/>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SuccessPage;","export default __webpack_public_path__ + \"static/media/loader.f8752710.svg\";","import preloader from '../../../img/loader.svg'\r\n\r\nconst Preloader = () => {\r\n    return (\r\n        <div>\r\n            <img src={preloader}\r\n    alt=\"preloader\" style={{\r\n    width: '25%'}\r\n            }/>\r\n        </div>\r\n)\r\n};\r\n\r\nexport default Preloader;","import React from 'react';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport s from \"../ResultSection/Result.module.css\";\r\nimport notFound from \"../../img/notFound.svg\";\r\nimport UniversalEmptyP from \"./UniversalEmptyP\";\r\nimport SuccessPage from \"./SuccessPage\";\r\nimport {actionsUser, getUserTC} from \"../../bll/profileReducer\";\r\nimport {AppRootStateType} from \"../../app/store\";\r\nimport Preloader from \"./preloader/Preloader\";\r\n\r\nconst Result = () => {\r\n    const dispatch = useDispatch();\r\n    const paginationState = useSelector((state: AppRootStateType) => state.profile)\r\n    const resUser = useSelector((state: AppRootStateType) => state.profile.user)\r\n    const resRepositories = useSelector((state: AppRootStateType) => state.profile.repositories)\r\n    const perPageNumber = useSelector((state: AppRootStateType) => state.profile.per_page)\r\n    const userName = resUser.name === \"\" ? \"User don't have name\" : resUser.name;\r\n    const notFoundPage = 'User not found'\r\n\r\n    const onPageChanged = (pageNumber: number) => {\r\n        dispatch(actionsUser.setCurrentPage(pageNumber))\r\n        dispatch(getUserTC(resUser.login, pageNumber, perPageNumber))\r\n        dispatch(actionsUser.setStart(pageNumber * 4 - 3))\r\n        dispatch(actionsUser.setEnd(pageNumber * 4))\r\n    }\r\n    return (\r\n        <div className={s.resultContainer}>\r\n            {paginationState.preLoader ? <Preloader/> : null}\r\n            <div className={s.result}>\r\n                {resUser ?\r\n                    (\r\n                        <SuccessPage\r\n                            userName={userName}\r\n                            resUser={resUser}\r\n                            resRepositories={resRepositories}\r\n                            paginationState={paginationState}\r\n                            onPageChanged={onPageChanged}\r\n                        />\r\n                    ) :\r\n                    <UniversalEmptyP\r\n                        text={notFoundPage}\r\n                        image={notFound}\r\n                    />\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Result","import React from 'react'\r\nimport {Route} from 'react-router-dom'\r\nimport UniversalEmptyP from \"../ResultSection/UniversalEmptyP\";\r\nimport search from \"../../img/search.svg\";\r\nimport Result from \"../ResultSection/Result\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../app/store\";\r\n\r\nexport const PATH = {\r\n    HOME_PAGE: '/',\r\n    SUCCESS_PAGE: '/search-user'\r\n\r\n}\r\n\r\nconst emptyPage = 'Start with searching a GitHub user'\r\nexport const Routes = () => {\r\n    const paginationState = useSelector((state: AppRootStateType) => state.profile)\r\n    return (\r\n        <div>\r\n            {!paginationState.isSuccess ?\r\n                <Route exact path={PATH.HOME_PAGE} component={() => <UniversalEmptyP\r\n                    text={emptyPage}\r\n                    image={search}\r\n                />}/> :\r\n                <Route path={PATH.SUCCESS_PAGE} children={() => <Result/>}/>}\r\n        </div>\r\n    )\r\n}","import React from 'react';\nimport './App.css';\nimport HeaderContainer from \"../components/Header/HeaderContainer\";\nimport {Routes} from \"../components/routes/Routes\";\n\nfunction App() {\n\n    return (\n        <div className=\"App\">\n                <HeaderContainer/>\n                <Routes/>\n        </div>\n    );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport thunkMiddleware from \"redux-thunk\"\r\nimport {profileReducer} from \"../bll/profileReducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n    profile: profileReducer,\r\n})\r\n\r\nexport const store = createStore(rootReducer, applyMiddleware(thunkMiddleware));\r\n\r\nexport type AppRootStateType = ReturnType<typeof rootReducer>\r\n\r\n// @ts-ignore\r\nwindow.store = store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './app/App';\nimport reportWebVitals from './reportWebVitals';\nimport {Provider} from 'react-redux';\nimport {store} from \"./app/store\";\nimport {HashRouter} from 'react-router-dom';\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <HashRouter basename={''}>\n                <App/>\n            </HashRouter>\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}